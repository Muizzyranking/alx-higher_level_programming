MyList is a custom list class that inherits from the built-in list class.

Usage:
>>> MyList = __import__('1-my_list').MyList
>>> my_list_instance = MyList([3, 1, 4, 1, 5, 9, 2, 6, 5])
>>> my_list_instance.print_sorted()
[1, 1, 2, 3, 4, 5, 5, 6, 9]

>>> another_list_instance = MyList([10, 8, 12, 6, 4])
>>> another_list_instance.print_sorted()
[4, 6, 8, 10, 12]

Note: The elements in the list are assumed to be integers for this example.

---

print_sorted() method:
Prints the list in ascending sorted order.

Usage:
>>> my_list_instance = MyList([3, 1, 4, 1, 5, 9, 2, 6, 5])
>>> my_list_instance.print_sorted()
[1, 1, 2, 3, 4, 5, 5, 6, 9]

>>> another_list_instance = MyList([10, 8, 12, 6, 4])
>>> another_list_instance.print_sorted()
[4, 6, 8, 10, 12]

---

__str__ method:
Returns a string representation of the list.

Usage:
>>> my_list_instance = MyList([3, 1, 4, 1, 5, 9, 2, 6, 5])
>>> str(my_list_instance)
'[3, 1, 4, 1, 5, 9, 2, 6, 5]'

>>> empty_list_instance = MyList([])
>>> str(empty_list_instance)
'[]'

---

append() method:
Appends an element to the end of the list.

Usage:
>>> my_list_instance = MyList([3, 1, 4, 1, 5, 9, 2, 6, 5])
>>> my_list_instance.append(7)
>>> my_list_instance
[3, 1, 4, 1, 5, 9, 2, 6, 5, 7]

>>> empty_list_instance = MyList([])
>>> empty_list_instance.append(42)
>>> empty_list_instance
[42]

---

print_sorted() with no sorted append with negative number:
Prints the list in ascending sorted order after appending a negative number.

Usage:
>>> my_list_instance = MyList([3, 1, 4, 1, 5, 9, 2, 6, 5])
>>> my_list_instance.append(-8)
>>> my_list_instance.print_sorted()
[-8, 1, 1, 2, 3, 4, 5, 5, 6, 9]

---

print_sorted() with empty list:
Prints an empty list in ascending sorted order.

Usage:
>>> empty_list_instance = MyList([])
>>> empty_list_instance.print_sorted()
[]

---

print_sorted() returns a new list:
Ensures that print_sorted() does not modify the original list.

Usage:
>>> my_list_instance = MyList([3, 1, 4, 1, 5, 9, 2, 6, 5])
>>> sorted_list = my_list_instance.print_sorted()
[1, 1, 2, 3, 4, 5, 5, 6, 9]
>>> sorted_list
>>> my_list_instance
[3, 1, 4, 1, 5, 9, 2, 6, 5]
