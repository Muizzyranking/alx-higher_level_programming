===========================
How to use 0-add_integer.py
============================


This module defines a function that adds two integers.

Using 00-add_integer.py
=======================


```0-add_integer.py``` defines a function that adds two integers. It takes two arguments, ```a``` and ```b```, both of which are integers. It returns the sum of the two integers.

::
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(1, 2)
	3
	
Works with negative numbers too.
::
	>>> (add_integer(100, -2))
	98


Use default value 98 for b if only one argument is passed
::
	>>> print(add_integer(2))
	100

Works with floats too

::
	>>> print(add_integer(100.3, -2))
	98

Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

::

    >>> add_integer("hello", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2, "hello")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.

::

    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer

The function will fail if infinity is provided.

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
     

::

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

And again with NaN numbers.

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
